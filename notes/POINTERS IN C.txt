pointer:

A pointer is a variable whose value is 
the address of another variable

&---memory address

format specifier---%p

1)INTEGER POINTER:

#include <stdio.h>

int main() 
{
    int num = 30;

    int *ptr; 
    ptr = &num; 

    printf("Value of num: %d\n", num);
    printf("Address of num: %p\n", &num);
    printf("Address of num: %p\n", ptr);

    printf("Value at the address stored in ptr: %d\n", *ptr);

    return 0;
}


2)CHARACTER POINTER:

#include <stdio.h>

int main() 
{
    char *str = "Hello,Python"; 

    printf("String: %s\n", str);
    printf("Address of str: %p\n", str);

    return 0;
}



3)POINTER ARITHMETIC:

#include <stdio.h>

int main() 
{
    int arr[] = {10, 20, 30, 40, 50};
    int *ptr = arr; 

    for (int i = 0; i < 5; i++)
    {
        printf("Value at index %d: %d\n", i, *(ptr + i)); 
    }

    return 0;
}


4)POINTER TO FUNCTIONS:

#include <stdio.h>

int add(int a, int b) 
{
    return a + b;
}

int main() 
{
    int (*func_ptr)(int, int); 
    func_ptr = add; 

    int result = func_ptr(5, 7); 
    printf("Result: %d\n", result);

    return 0;
}


5)POINTER TO STRUCTURES:
#include <stdio.h>

struct Point 
{
    int x;
    int y;
};

int main() 
{
    struct Point p1 = {10, 20};
    struct Point *ptr = &p1;

    printf("Coordinates: (%d, %d)\n", ptr->x, ptr->y);

    return 0;
}
